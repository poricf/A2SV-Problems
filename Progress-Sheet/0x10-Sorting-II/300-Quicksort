def quick_sort(nums, left, right):
    if left >= right:
        return
    
    pivot_index = partition(nums, left, right)
    quick_sort(nums, left, pivot_index - 1)
    quick_sort(nums, pivot_index + 1, right)

def partition(nums, left, right) -> int:
    pivot = left
    w = left + 1
    
    for r in range(w, right + 1):
        if nums[r] < nums[pivot]:
            nums[w], nums[r] = nums[r], nums[w]
            w += 1
    
    nums[pivot], nums[w - 1] = nums[w - 1], nums[pivot]
    
    return w - 1

def main():
    nums = [1,2,5,4,7,8,4,9,1,3]
    quick_sort(nums, 0, len(nums) - 1)

    # Print the sorted list
    print(nums)

    # Additional test case
    arr = [7, 2, 1, 6, 8, 5, 3]
    quick_sort(arr, 0, len(arr) - 1)
    print("\n\nAdditional test case:")
    print("Sorted list:", arr)

if __name__ == "__main__":
    main()